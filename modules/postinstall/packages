#!/bin/bash

PACKAGE_MODULE_NAME="modules.install"

# Função de instala alguns bacotes básicos, ou uma pré instalação antes de Instalar os demais módulos.
function basic.packages(){
    clear
	PACKAGE_MODULE_NAME_BASIC_PACKAGES=${PACKAGE_MODULE_NAME}.${FUNCNAME[0]}
    MESSAGE_INSTALL="[INFO $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME_BASIC_PACKAGES} - Instalando:"
    MESSAGE_INSTALLED="[WARN $(date "+%Y-%m-%d %H:%M:%S")] -${PACKAGE_MODULE_NAME_BASIC_PACKAGES} - Dependencia já instalada no sistema:"

	local PKG[0]="software-properties-common"
	local PKG[1]="apt-transport-https"
	local PKG[2]="ca-certificates"
	local PKG[3]="wget"
	local PKG[4]="curl"
	local PKG[5]="vim"
	local PKG[6]="htop"
	local PKG[7]="snapd"
	
    for (( a=0; a<${#PKG[@]}; a++ ));
    do
        dpkg -s ${PKG[$a]} &> /dev/nul
        if [ $? -eq 0 ];
        then
            sleep 1s
            echo "${MESSAGE_INSTALLED} ${PKG[$a]}"
        else
            sleep 1s
            _load "${MESSAGE_INSTALL} ${PKG[$a]}" "clear && yes | apt -qq install ${PKG[$a]} &> /dev/null && clear"
        fi
    done
}

# Função que configura os repositórios no sistema operacional.
function repositories(){
    clear 
	PACKAGE_MODULE_NAME_REPOSITORIES=${PACKAGE_MODULE_NAME}.${FUNCNAME[0]}
	echo "[INFO $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME_REPOSITORIES} - Iniciando a configuracao dos repositorios"

    sudo wget -qO - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - > /dev/null 2>&1
	sudo wget -qO https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - > /dev/null 2>&1
	sudo wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -	> /dev/null 2>&1
	sudo wget -qO - https://download.teamviewer.com/download/linux/signature/TeamViewer2017.asc | sudo apt-key add -	> /dev/null 2>&1
	sudo wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | sudo apt-key add - > /dev/null 2>&1
	sudo wget -qO - https://dbeaver.io/debs/dbeaver.gpg.key | sudo apt-key add - > /dev/null 2>&1
	sudo wget -qO - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 2>&1
	sudo wget -qO- https://download.teamviewer.com/download/linux/signature/TeamViewer2017.asc  | sudo apt-key add - 2>&1

	sudo curl -s -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - 2>&1
    sudo curl -s -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose > /dev/null 2>&1
	sudo curl -s "https://build.opensuse.org/projects/home:manuelschneid3r/public_key" | sudo apt-key add - > /dev/null 2>&1
	
	sudo echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo sudo tee /etc/apt/sources.list.d/google-chrome.list > /dev/null 2>&1
	sudo echo "deb http://deb.anydesk.com/ all main" | sudo sudo tee /etc/apt/sources.list.d/anydesk-stable.list > /dev/null 2>&1
	sudo echo "deb https://dbeaver.io/debs/dbeaver-ce /" | sudo tee /etc/apt/sources.list.d/dbeaver.list > /dev/null 2>&1
	sudo echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list > /dev/null 2>&1
	sudo echo "deb https://deb.etcher.io stable etcher" | sudo tee /etc/apt/sources.list.d/balena-etcher.list > /dev/null 2>&1
	sudo echo "deb [trusted=yes arch=amd64] https://download.konghq.com/insomnia-ubuntu/ default all" | sudo tee -a /etc/apt/sources.list.d/insomnia.list > /dev/null 2>&1
	sudo echo "deb http://linux.teamviewer.com/deb stable main" | sudo tee -a /etc/apt/sources.list.d/teamviewer.list > /dev/null 2>&1
	sudo echo "deb http://linux.teamviewer.com/deb preview main" | sudo tee -a /etc/apt/sources.list.d/teamviewer.list > /dev/null 2>&1


	yes| sudo apt-key adv --keyserver hkps://keyserver.ubuntu.com:443 --recv-keys 379CE192D401AB61 > /dev/null 2>&1
	yes| sudo add-apt-repository ppa:ubuntuhandbook1/apps > /dev/null 2>&1
	yes| sudo add-apt-repository ppa:agornostal/ulauncher > /dev/null 2>&1
	yes| sudo add-apt-repository ppa:sicklylife/filezilla > /dev/null 2>&1
	yes| sudo apt-add-repository ppa:remmina-ppa-team/remmina-next > /dev/null 2>&1
	yes| sudo add-apt-repository ppa:ubuntuhandbook1/ksnip  > /dev/null 2>&1
	yes| sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /dev/null 2>&1
	yes| sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" > /dev/null 2>&1  
	
	echo "[INFO $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME_REPOSITORIES} - Repositorios configurados"

}

# Função que agora de fato instala os pacotes das aplicações.
# Caso deseje adicionar alguma aplicação, adicione o nome dela no array PKG, ou caso seja algum pacote snap adiciona o nome no PKG_SNAP
function packages(){
	clear 
	PACKAGE_MODULE_NAME_PACKAGES=${PACKAGE_MODULE_NAME}.${FUNCNAME[0]}
    MESSAGE_INSTALL="[INFO $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME_PACKAGES} - Instalando:"
    MESSAGE_INSTALLED="[WARN $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME_PACKAGES} - Dependencia já instalada no sistema:"

	echo "[INFO $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME} - Iniciando a instalação dos pacotes"

	local PKG[0]="subversion"
	local PKG[1]="fontconfig"
	local PKG[2]="code"
	local PKG[3]="remmina"
	local PKG[4]="remmina-plugin-rdp"
	local PKG[5]="anydesk"
	local PKG[6]="dbeaver-ce"
	local PKG[7]="sublime-text"
	local PKG[8]="virtualbox"
	local PKG[9]="ksnip"
	local PKG[10]="docker-ce"
	local PKG[11]="git"
	local PKG[12]="awscli"
	local PKG[13]="python3-pip"
	local PKG[14]="gdebi-core"
	local PKG[15]="network-manager-openvpn-gnome"
	local PKG[16]="postgresql-client"
	local PKG[17]="gnome-shell-extensions"
	local PKG[18]="gnome-tweaks"
	local PKG[19]="zsh"
	local PKG[20]="maven"
	local PKG[21]="google-chrome-stable"
	local PKG[22]="teamviewer"

    for (( a=0; a<${#PKG[@]}; a++ ));
    do
        dpkg -s ${PKG[$a]} &> /dev/nul
        if [ $? -eq 0 ];
        then
            sleep 1s
            echo "${MESSAGE_INSTALLED} ${PKG[$a]}"
        else
            sleep 1s
            _load "${MESSAGE_INSTALL} ${PKG[$a]}" "clear && yes | apt -qq install ${PKG[$a]} &> /dev/null && clear"
        fi
    done

	local PKG_SNAP[0]="insomnia"
	local PKG_SNAP[1]="intellij-idea-community --classic --edge"
	local PKG_SNAP[2]="another-redis-desktop-manager"
	local PKG_SNAP[3]="discord"

	for (( a=0; a<${#PKG_SNAP[@]}; a++ ));
    do
        snap list | grep  ${PKG_SNAP[$a]} &> /dev/nul
        if [ $? -eq 0 ];
        then
            sleep 1s
            echo "${MESSAGE_INSTALLED} ${PKG_SNAP[$a]}"
        else
            sleep 1s
            _load "${MESSAGE_INSTALL} ${PKG_SNAP[$a]}" "clear && yes | snap install ${PKG_SNAP[$a]} &> /dev/null && clear"
        fi
    done

}

function zsh(){
    clear
	PACKAGE_MODULE_NAME_ZSH=${PACKAGE_MODULE_NAME}.${FUNCNAME[0]}
	echo "[INFO $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME} - Instalando o Zsh"
	sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" -y
	chsh -s $(which zsh)
	usermod -s /usr/bin/zsh $(whoami)
	clear
	echo "[INFO $(date "+%Y-%m-%d %H:%M:%S")] - ${PACKAGE_MODULE_NAME_ZSH} - ZSH Instalado com sucesso"
}